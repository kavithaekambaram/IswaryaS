using Microsoft.VisualStudio.TestPlatform.TestHost;
using System.Collections.Generic;

namespace CsharpLIST
{
    [TestClass]
    public class UnitTest1
    {
        [TestMethod]
        public void TestMethod1()

        {
            List<int> list1 = new List<int>();
            list1.Add(11);
            list1.Add(0);
            list1.Add(2);
            list1.Add(31);
            list1.Add(0);
            list1.Add(3);
            list1.Add(0);
            list1.Add(12);

            Console.WriteLine("List of Numbers:");

            foreach (int i in list1)
                Console.WriteLine(i);

            //Second Highest Value in the list
            list1 = list1.OrderByDescending(x => x).ToList();
            if (list1.Count >= 2)
            {
                int secondHighest = list1[1];
                Console.WriteLine("Second-Highest Value: " + secondHighest);
            }
            else
            {
                Console.WriteLine("The list does not have a second-highest value.");
            }

            //Even number in the list
            Console.WriteLine("Even Numbers:");

            foreach (int number in list1)
            {
                if (number % 2 == 0)
                {
                    Console.WriteLine(number);
                }
            }
        }


        [TestMethod]

        public void TestMethod2()

        {
            List<int> list1 = new List<int>();
            list1.Add(11);
            list1.Add(0);
            list1.Add(2);
            list1.Add(31);
            list1.Add(0);
            list1.Add(3);
            list1.Add(0);
            list1.Add(12);

            Console.WriteLine("List of Numbers:");

            foreach (int i in list1)
                Console.WriteLine(i);

            //List all the "0" values at the end

            List<int> sortedList = new List<int>();

            // Add non-zero elements first
            foreach (int number in list1)
            {
                if (number != 0)
                {
                    sortedList.Add(number);
                }
            }

            // Then add zero values
            foreach (int number in list1)
            {
                if (number == 0)
                {
                    sortedList.Add(number);
                }
            }

            Console.WriteLine("List with 0 values at the end:");

            foreach (int number in sortedList)
            {
                Console.WriteLine(number);
            }
        }

        [TestMethod]

        public void TestMethod3()
        //Reverse a number
        {
            List<int> list = new List<int> { 1, 2, 3, 4, 5, 6, 7, 8, 9 };
            list.Reverse();
            foreach (int number in list)
                Console.WriteLine(number);
        }
        [TestMethod]

        public void TestMethod4()
        //Reverse a string
        {

            List<string> stringList = new List<string>();

            stringList.Add("Apple");
            stringList.Add("Banana");
            stringList.Add("Cherry");
            stringList.Add("Date");

            stringList.Reverse();

            Console.WriteLine("Reversed List of Strings:");

            foreach (string str in stringList)
            {
                Console.WriteLine(str);
            }

            //Reverse a string
            {
                string input = "apple";

                char[] charArray = input.ToCharArray();
                Array.Reverse(charArray);
                string reversedString = new string(charArray);

                Console.WriteLine("Original String: " + input);
                Console.WriteLine("Reversed String: " + reversedString);
            }
        }
    }
}
       
    
