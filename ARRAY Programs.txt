namespace Arrays
//ARRAYS
{
    [TestClass]
    public class UnitTest1
    {
        [TestMethod]
        public void TestMethod1()
        {

            string[] city = { "Chennai", "Tanjore", "Madurai", "Coimbatore" };
            Console.WriteLine(city[2]);




        }
        //Loop Through an Array

        [TestMethod]
        public void TestMethod2()
        {

            string[] names = new string[5];


            names[0] = "Ishu";
            names[1] = "Priya";
            names[2] = "Gokila";
            names[3] = "David";
            names[4] = "Kavitha";


            Console.WriteLine("List of Names:");
            for (int i = 0; i < names.Length; i++)
            {
                Console.WriteLine(names[i]);


            }
        }
        // Sort Array
        [TestMethod]

        public void TestMethod3()
        {
            int[] myNumbers = { 5, 1, 8, 9, 6, 3, 11 };
            Array.Sort(myNumbers);
            foreach (int i in myNumbers)
            {
                Console.WriteLine(i);
            }


        }

        //Descending order
        [TestMethod]

        public void TestMethod4()
        {
            int[] myNumbers = { 5, 1, 8, 9, 6, 3, 11 };
            Array.Sort(myNumbers);
            Array.Reverse(myNumbers);
            foreach (int i in myNumbers)
            {
                Console.WriteLine(i);
            }


        }
        //Multidimensional Array using for loop(2D array)

        [TestMethod]
        public void TestMethod5()
        {
            int[,] numbers = { { 1, 4, 2 }, { 3, 6, 8 } };

            for (int i = 0; i < numbers.GetLength(0); i++)
            {
                for (int j = 0; j < numbers.GetLength(1); j++)
                {
                    Console.WriteLine(numbers[i, j]);
                }
            }
        }

        //LIST

        [TestMethod]
        public void TestMethod6()
        {


            List<string> namesList = new List<string>();

            // Add names to the List
            namesList.Add("Alice");
            namesList.Add("Bob");
            namesList.Add("Charlie");


            Console.WriteLine("Names in the List:");
            foreach (string name in namesList)
            {
                Console.WriteLine(name);
            }

            

            //Checking for existence
            bool containsBob = namesList.Contains("Bob");

            //To find imdex value
            int index = namesList.IndexOf("Charlie");
            Console.WriteLine(index);

            // Remove the value
            namesList.Remove("Alice");
            Console.WriteLine("Updated Names in the List:");

            // After removing find the index value
            int index1 = namesList.IndexOf("Charlie");
            Console.WriteLine(index1);

            foreach (string name in namesList)
            {
                Console.WriteLine(name);
            }
        }

        //STRING

        // Concatenating Strings
        [TestMethod]
        public void TestMethod7()
        {
            string firstName = "John";
            string lastName = "Doe";

            string fullName = firstName + " " + lastName;

            Console.WriteLine("Full Name: " + fullName);
        }
        //String Length:
        [TestMethod]
        public void TestMethod8()
        {
            string text = "My name is Iswarya";

            int length = text.Length;

            Console.WriteLine("Length of the string: " + length);
        }
        //String comparison

        [TestMethod]
        public void TestMethod9()
        {
            string str1 = "apple";
            string str2 = "apple";
            
            int result = String.Compare(str1, str2);
            Console.WriteLine(result);
        }
    }
}


    


        
    
